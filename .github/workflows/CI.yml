name: Build and Test Neural Search
on:
  schedule:
    - cron: '0 0 * * *'  # every night
  push:
    branches:
      - "*"
      - "feature/**"
  pull_request:
    branches:
      - "*"
      - "feature/**"

jobs:
  Get-CI-Image-Tag:
    uses: opensearch-project/opensearch-build/.github/workflows/get-ci-image-tag.yml@main
    with:
      product: opensearch

  Check-neural-search-linux:
    needs: Get-CI-Image-Tag
    strategy:
      matrix:
        java: [21, 23]
        os: [ubuntu-latest]

    name: Gradle Check Linux
    runs-on: ${{ matrix.os }}
    permissions:
      pull-requests: write  # Required for PR comments
    container:
      # using the same image which is used by opensearch-build team to build the OpenSearch Distribution
      # this image tag is subject to change as more dependencies and updates will arrive over time
      image: ${{ needs.Get-CI-Image-Tag.outputs.ci-image-version-linux }}
      # need to switch to root so that github actions can install runner binary on container without permission issues.
      options: ${{ needs.Get-CI-Image-Tag.outputs.ci-image-start-options }}

    steps:
      - name: Run start commands
        run: ${{ needs.Get-CI-Image-Tag.outputs.ci-image-start-command }}

      - uses: actions/checkout@v4

      - name: Debug Network Info
        run: |
          echo "Checking network connectivity..."
          ping -c 3 127.0.0.1
          netstat -an | grep 7777
          echo "Current directory: $(pwd)"
          echo "Environment variables:"
          env | sort

      - name: Start Monitoring
        uses: catchpoint/workflow-telemetry-action@v2
        with:
          metric_frequency: 5
          proc_trace_sys_enable: true
          job_summary: true
          comment_on_pr: true
          proc_trace_chart_show: true
          proc_trace_table_show: true

      - name: Debug After Telemetry
        run: |
          echo "Checking processes after telemetry..."
          ps aux | grep telemetry
          echo "Checking network connections..."
          netstat -an | grep 7777
          echo "Checking logs..."
          ls -la /tmp/telemetry* 2>/dev/null || echo "No telemetry logs found"

      - name: Setup Java ${{ matrix.java }}
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: ${{ matrix.java }}

      - name: Run build
        run: |
          chown -R 1000:1000 `pwd`
          su `id -un 1000` -c "./gradlew check"

      - name: Upload Coverage Report
        if: ${{ !cancelled() }}
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

  Check-neural-search-linux-multi-node:
    needs: Get-CI-Image-Tag
    strategy:
      matrix:
        java: [21]
        os: [ubuntu-latest]

    name: Gradle Check Linux Multi-Node
    runs-on: ${{ matrix.os }}
    permissions:
      pull-requests: write  # Required for PR comments
    container:
      image: ${{ needs.Get-CI-Image-Tag.outputs.ci-image-version-linux }}
      options: ${{ needs.Get-CI-Image-Tag.outputs.ci-image-start-options }}

    steps:
      - name: Run start commands
        run: ${{ needs.Get-CI-Image-Tag.outputs.ci-image-start-command }}

      - uses: actions/checkout@v4

      - name: Debug Network Info
        run: |
          echo "Checking network connectivity..."
          ping -c 3 127.0.0.1
          netstat -an | grep 7777
          echo "Current directory: $(pwd)"
          echo "Environment variables:"
          env | sort

      - name: Start Monitoring
        uses: catchpoint/workflow-telemetry-action@v2
        with:
          metric_frequency: 5
          proc_trace_sys_enable: true
          job_summary: true
          comment_on_pr: true
          proc_trace_chart_show: true
          proc_trace_table_show: true

      - name: Debug After Telemetry
        run: |
          echo "Checking processes after telemetry..."
          ps aux | grep telemetry
          echo "Checking network connections..."
          netstat -an | grep 7777
          echo "Checking logs..."
          ls -la /tmp/telemetry* 2>/dev/null || echo "No telemetry logs found"

      - name: Setup Java ${{ matrix.java }}
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: ${{ matrix.java }}

      - name: Run multi-node tests
        run: |
          chown -R 1000:1000 `pwd`
          su `id -un 1000` -c "./gradlew check -PnumNodes=3"

      - name: Upload Coverage Report
        if: ${{ !cancelled() }}
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

  Check-neural-search-windows:
    strategy:
      matrix:
        java: [21, 23]
        os: [windows-latest]

    name: Gradle Check Windows
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v4

      - name: Setup Java ${{ matrix.java }}
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: ${{ matrix.java }}

      - name: Run build
        run: |
          ./gradlew check

  Precommit-neural-search-linux:
    needs: Get-CI-Image-Tag
    strategy:
      matrix:
        java: [21, 23]
        os: [ubuntu-latest]

    name: Pre-commit Linux
    runs-on: ${{ matrix.os }}
    container:
      # using the same image which is used by opensearch-build team to build the OpenSearch Distribution
      # this image tag is subject to change as more dependencies and updates will arrive over time
      image: ${{ needs.Get-CI-Image-Tag.outputs.ci-image-version-linux }}
      # need to switch to root so that github actions can install runner binary on container without permission issues.
      options: ${{ needs.Get-CI-Image-Tag.outputs.ci-image-start-options }}

    steps:
      - name: Run start commands
        run: ${{ needs.Get-CI-Image-Tag.outputs.ci-image-start-command }}

      - uses: actions/checkout@v4

      - name: Setup Java ${{ matrix.java }}
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: ${{ matrix.java }}

      - name: Run build
        run: |
          chown -R 1000:1000 `pwd`
          su `id -un 1000` -c "./gradlew precommit --parallel && ./gradlew jacocoTestReport && cp -v build/reports/jacoco/test/jacocoTestReport.xml ./jacocoTestReport.xml"

      - uses: actions/upload-artifact@v4
        if: ${{ matrix.os }} == "ubuntu-latest"
        with:
          name: coverage-report-${{ matrix.os }}-${{ matrix.java }}
          path: ./jacocoTestReport.xml

  Precommit-codecov:
    needs: Precommit-neural-search-linux
    strategy:
      matrix:
        java: [21, 23]
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: coverage-report-${{ matrix.os }}-${{ matrix.java }}
          path: ./
      - name: Upload Coverage Report
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./jacocoTestReport.xml
